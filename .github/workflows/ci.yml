name: CI and Docker Build & Push

on:
  push:
    branches:
      - main
      - master # In case you use master as default
    tags:
      - "v*.*.*" # Push on version tags
  pull_request:
    branches:
      - main
      - master

env:
  # User needs to set DOCKERHUB_USERNAME and DOCKERHUB_REPOSITORY_NAME secrets in GitHub
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY_NAME }}

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod" # Reads Go version from go.mod

      - name: Run linters
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.57 # Specify a version of golangci-lint
          args: --timeout=5m # Optional: Increase timeout
          # Optional: only show new issues if it's a PR
          # only-new-issues: ${{ github.event_name == 'pull_request' }}

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # Optional: required for private repos or specific Codecov settings
          files: ./coverage.out
          flags: unittests # Optional
          name: codecov-umbrella # Optional
          fail_ci_if_error: false # Optional: Prevents CI failure if Codecov upload fails

  build-and-push:
    name: Build and Push to Docker Hub
    needs: lint-and-test # Run this job only after lint-and-test succeeds
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' # Only run on push or manual dispatch
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.platform }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }} # User needs to set DOCKERHUB_TOKEN secret

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=schedule,pattern=nightly,enable={{ github.ref == 'refs/heads/main' }}
            type=ref,event=branch,enable={{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,prefix=,suffix=,format=short
            type=raw,value=latest,enable={{ github.ref == 'refs/heads/main' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployments/Dockerfile # Correct path to Dockerfile
          platforms: ${{ matrix.platform }}
          # Push only on pushes to main/master branch or version tags, not on PRs
          push: ${{ github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
